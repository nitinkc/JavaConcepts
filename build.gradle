plugins {
    id 'java'
    id 'maven-publish'
}
// Set Java version
sourceCompatibility = 20
targetCompatibility = 20
group = 'JavaConcepts'
version = '1.0-SNAPSHOT'

repositories {
    gradlePluginPortal()
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2')
        allowInsecureProtocol = true
    }
    flatDir { dirs '../Utilities/build/libs' }
    mavenCentral()
}

dependencies {
    //implementation name: 'Utilities-1.0-SNAPSHOT'
    implementation 'junit:junit:4.13.2'
    implementation group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    implementation 'mysql:mysql-connector-java:8.0.29'

    implementation 'org.springframework:spring-web:4.0.0.RELEASE'
    implementation 'joda-time:joda-time:2.10.14'
    implementation 'org.reflections:reflections:0.10.2'

    //Lombok
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

    //Apache Commons
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.apache.commons:commons-math3:3.6.1'
    //Jackson Mapper
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.3'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.13.3'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.13.3'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.3'
    //JSON Parser
    implementation group: 'org.json', name: 'json', version: '20220320'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation 'com.google.guava:guava:31.1-jre'
    // Reactive
    implementation 'io.reactivex.rxjava3:rxjava:3.0.0-RC1'
    implementation 'io.projectreactor:reactor-core:3.4.23'

    implementation 'com.github.javafaker:javafaker:1.0.2'

    //Map Struct
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    //SL4J
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-nop
    testImplementation 'org.slf4j:slf4j-nop:2.0.3'

    testImplementation 'io.projectreactor:reactor-test:3.1.0.RELEASE'
    //Testing Framework
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'junit:junit:4.13.2'
    testImplementation('org.junit.jupiter:junit-jupiter:5.5.1')
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.2.4'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.2.4'

}

task myJavadocs(type: Javadoc) {
    source = sourceSets.main.allJava
    //destinationDir = reporting.file("rest-api-docs")
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}