plugins {
    id 'java'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.9.20-RC'
}

group = 'JavaConcepts'
version = '1.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs += "--enable-preview"
}
tasks.withType(Test) {
    jvmArgs += "--enable-preview"
}
tasks.withType(JavaExec) {
    jvmArgs += "--enable-preview"
}
repositories {
    gradlePluginPortal()
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2')
        allowInsecureProtocol = true
    }
    flatDir { dirs '../Utilities/build/libs' }
    mavenCentral()
}

dependencies {
    //implementation name: 'Utilities-1.0-SNAPSHOT'
    implementation 'junit:junit:' + junitVersion
    implementation group: 'javax.persistence', name: 'javax.persistence-api', version: javaxPersistenceApiVersion
    implementation 'mysql:mysql-connector-java:' + mysqlConnectorVersion
    implementation 'org.springframework:spring-web:' + springWebVersion
    implementation 'joda-time:joda-time:' + jodaTimeVersion
    implementation 'org.reflections:reflections:' + reflectionsVersion
    //Lombok
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    testCompileOnly "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
    //Apache Commons
    implementation "org.apache.commons:commons-collections4:$commonsCollectionsVersion"
    implementation "org.apache.commons:commons-lang3:$commonsLangVersion"
    implementation "commons-io:commons-io:$commonsIoVersion"
    implementation "org.apache.commons:commons-math3:$commonsMathVersion"
    //Jackson Mapper
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: jacksonVersion
    //JSON Parser
    implementation group: 'org.json', name: 'json', version: '20220320'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    implementation group: 'com.google.code.gson', name: 'gson', version: gsonVersion
    implementation 'com.google.guava:guava:' + guavaVersion
    // Reactive
    implementation 'io.reactivex.rxjava3:rxjava:' + rxJavaVersion
    implementation 'io.projectreactor:reactor-core:' + reactorCoreVersion
    implementation 'com.github.javafaker:javafaker:' + javaFakerVersion
    //Map Struct
    implementation 'org.mapstruct:mapstruct:' + mapstructVersion
    annotationProcessor 'org.mapstruct:mapstruct-processor:' + mapstructVersion
    //SL4J
    testImplementation 'org.slf4j:slf4j-nop:' + slf4jVersion
    testImplementation 'io.projectreactor:reactor-test:' + reactorTestVersion
    //Testing Framework
    testImplementation 'org.junit.jupiter:junit-jupiter-api:' + junitJupiterVersion
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:' + junitJupiterVersion
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.5.1'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: mockitoCoreVersion
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: mockitoCoreVersion
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    //Kotlin
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3") // Use kotlinx-coroutines-core for non-Android projects
}

task myJavadocs(type: Javadoc) {
    source = sourceSets.main.allJava
    //destinationDir = reporting.file("rest-api-docs")
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}
kotlin {
    jvmToolchain(20)
}